{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)a4210afa-d893-4ad7-8d28-e09af86d6820","ParentGuid":"(Guid)a2e4a053-9bab-4e6d-8bfa-78852b0a11c2","Name":"(string)Trend_Menu","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)now := SysTimeRtc.SysTimeRtcGet(result);\nSysTimeRtc.SysTimeRtcConvertUtcToDate(now, nowStruct);\n\n\nIF xFirst THEN\n\txFirst := FALSE;\n\t\n\t// just to init with current values\n\tstart := end := nowStruct;\n\tStartDate := DWORD_TO_DATE(now);\n\tEndDate := DWORD_TO_DATE(now);\n\tStartCalendarDate := StartDate;\n\tEndCalendarDate := EndDate;\n\t\nEND_IF\n\n// The following code uses completely undocumented functionality that might change with future versions or\n// might even no longer be available in future versions!\n\n\nStartDate_String\t:= DATE_TO_STRING(StartDate);\nEndDate_String\t:= DATE_TO_STRING(EndDate);\n\n// Extract year, month, and day from the STRING\nyear_start := STRING_TO_UINT(MID(StartDate_String, 4, 3));\nmonth_start := STRING_TO_UINT(MID(StartDate_String, 2, 8));\nday_start := STRING_TO_UINT(RIGHT(StartDate_String, 2));\n\nstart.wYear\t\t:= year_start;\nstart.wMonth\t:= month_start;\nstart.wDay\t\t:= day_start;\n\nyear_end := STRING_TO_UINT(MID(EndDate_String, 4, 3));\nmonth_end := STRING_TO_UINT(MID(EndDate_String, 2, 8));\nday_end := STRING_TO_UINT(RIGHT(EndDate_String, 2));\n\nend.wYear\t\t:= year_end;\nend.wMonth\t\t:= month_end;\nend.wDay\t\t:= day_end;\n\n\nIF xAssign THEN\n\txAssign := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs.m_itfDateRangeSelectorClient.SetCurrentRange(drs.liFrom, drs.liTo);\nEND_IF\n\t\n\tIF xAssign1 THEN\n\txAssign1 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs1.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs1.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs1.m_itfDateRangeSelectorClient.SetCurrentRange(drs1.liFrom, drs1.liTo);\nEND_IF\n\n\tIF xAssign2 THEN\n\txAssign2 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs2.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs2.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs2.m_itfDateRangeSelectorClient.SetCurrentRange(drs2.liFrom, drs2.liTo);\nEND_IF\n\n\tIF xAssign3 THEN\n\txAssign3 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs3.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs3.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs3.m_itfDateRangeSelectorClient.SetCurrentRange(drs3.liFrom, drs3.liTo);\nEND_IF\n\n\tIF xAssign4 THEN\n\txAssign4 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs4.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs4.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs4.m_itfDateRangeSelectorClient.SetCurrentRange(drs4.liFrom, drs4.liTo);\nEND_IF\n\n\tIF xAssign5 THEN\n\txAssign5 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs5.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs5.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs5.m_itfDateRangeSelectorClient.SetCurrentRange(drs5.liFrom, drs5.liTo);\nEND_IF\n\n\tIF xAssign6 THEN\n\txAssign6 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs6.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs6.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs6.m_itfDateRangeSelectorClient.SetCurrentRange(drs6.liFrom, drs6.liTo);\nEND_IF\n\n\tIF xAssign7 THEN\n\txAssign7 := FALSE;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\tdrs7.liFrom := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(start, 0 (*us*));\n\tdrs7.liTo   := VisuTrendStorageAccess.TrendStorageConvertToTimestamp(end, 0 (*us*));\n\tdrs7.m_itfDateRangeSelectorClient.SetCurrentRange(drs7.liFrom, drs7.liTo);\nEND_IF\n\nIF xReset THEN\n    xReset := FALSE;\n\tstart := end := nowStruct;\n\tStartDate := DWORD_TO_DATE(now);\n\tEndDate := DWORD_TO_DATE(now);\n\tStartCalendarDate := StartDate;\n\tEndCalendarDate := EndDate;\n\txPanEnable := FALSE;\n\txZoomEnable := FALSE;\n\txTimeRange_10m := 600000;\t\nEND_IF \n","LineInfoPersistence":"(string)a4210afa-d893-4ad7-8d28-e09af86d6820_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)PROGRAM Trend_Menu\nVAR\n\tnow \t\t\t: DWORD;\n\tresult \t\t\t: SysTimeRtc.RTS_IEC_RESULT;\n\tnowStruct \t\t: SysTimeRtc.SYSTIMEDATE;\n\t\n\tstart \t\t\t: SysTimeRtc.SYSTIMEDATE;\n\tend \t\t\t: SysTimeRtc.SYSTIMEDATE;\n\t\n\t// undocumented instance within the according library; possible subject for changes without notice in future versions\n\tdrs \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs1 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs2 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs3 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs4 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs5 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs6 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\tdrs7 \t\t\t: VisuElemTrace.ProgrammaticDateRangeSelector;\n\t\n\txAssign\t\t\t: BOOL;\n\txAssign1\t\t: BOOL;\n\txAssign2\t\t: BOOL;\n\txAssign3\t\t: BOOL;\n\txAssign4\t\t: BOOL;\n\txAssign5\t\t: BOOL;\n\txAssign6\t\t: BOOL;\n\txAssign7\t\t: BOOL;\n\txFirst\t\t\t: BOOL := TRUE;\n\txReset\t\t\t: BOOL;\n\txTimeRange_10m\t: LINT;\n\t\t\n\tStartDate\t\t\t: DATE;\n\tStartCalendarDate\t: DATE;\n\tStartDate_String\t: STRING(12);\n\tEndDate\t\t\t\t: DATE;\n\tEndCalendarDate\t\t: DATE;\n\tEndDate_String\t\t: STRING(12);\n\t\n\tyear_start : UINT;\n\tmonth_start : UINT;\n\tday_start : UINT;\n\tyear_end : UINT;\n\tmonth_end : UINT;\n\tday_end : UINT;\n\t\n\txLive\t\t:BOOL;\n\txPanEnable : BOOL;\n\txZoomEnable : BOOL;\n\t\nEND_VAR\n","LineInfoPersistence":"(string)a4210afa-d893-4ad7-8d28-e09af86d6820_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)629","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}